@startuml
title MBH diagram ; 2 <= mpid < 2 + N_MBH

|#white|GlobalFit.c|
start
  :// Forked from MPI_Init();

  |#white|GalacticBinaryIO.c|
  :// Reads known-sources file.
  parse_vb_list();

  |#white|MBHWrapper.c|
  :// search_sources.dat found
  // get N_MBH = number of line
  parse_mbh_args();

  |#white|GalacticBinaryIO.c|
  :// Parse any UCB 
  parse();

  |#white|GlobalFit.c|
  :// Allocates GlobalFit TDI AE structures
  alloc_gf_data();

  |#white|GalacticBinaryWrapper.c|
  :// Allocates UCB structures (flags, orbit, chain, data, prior).
  alloc_gbmcmc_data();

  |#white|VerificationBinaryWrapper.h|
  :// Allocates VG structures (flags, orbit, chain_vec, data_vec,_prior_vec, trial_vec, model_vec).
  alloc_vbmcmc_data();

  |#white|MBHWrapper.c|
  :// Allocates MBH structures (data, het, flags, tdi).
  alloc_mbh_data();

  |#white|NoiseWrapper.c|
  :alloc_noise_data();

  :// Propagates input TDI to all mpids.
  share_data();

  :initialize_noise_sampler();

  repeat
    |#white|GlobalFit.c|
    :// Receives TDI AE from root process.
    share_gbmcmc_model();

    |#white|GlobalFit.c|
    :// Receives TDI AE from root process.
    share_mbh_model();

    :// Remove from TDI AET all found signals from last iteration of UCB VGB MBH
    create_residual();

    |#white|NoiseWrapper.c|
    :select_frequency_segment();

    :// MCMC
    update_noise_sampler();

    |#white|GlobalFit.c|
    :// Sends noise model to all processes.
    share_noise_model();

    :// Receives TDI AE from root process.
    share_vbmcmc_model();

  repeat while (GBMCMC steps finished?) is (no)
  ->yes;

stop
@enduml

